timeout: 3600s # 1-hr
tags:
  - open-node-platform
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
  _GCP_REGION: ${GCP_REGION}
  _NODE_NAME: ${NODE_NAME}
  _CLUSTER_NAME: ${CLUSTER_NAME}
  _FULL_NODE_NAME: ${FULL_NODE_NAME}
options:
  substitution_option: 'ALLOW_LOOSE'
steps:
- name: "gcr.io/${_PROJECT_ID}/open-node-platform-installer"
  id: "add-validator-node"
  entrypoint: 'bash'
  args:
    - '-xe'
    - '-c'
    - |
      gcloud container clusters get-credentials ${_CLUSTER_NAME} --region ${_GCP_REGION}

      # Get full node ip
      export FULL_NODE_SVC_NAME=$_FULL_NODE_NAME-service
      export FULL_NODE_IP=$(kubectl get svc $$FULL_NODE_SVC_NAME -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

      sed -i'' -e  "s/YOUR_NODE_NAME/${_NODE_NAME}/g" k8s/deployment-validator.yaml
      sed -i'' -e  "s/YOUR_FULL_NODE_IP/$${FULL_NODE_IP}/g" k8s/deployment-validator.yaml

      # Invoke node getInfo.js to get peer id
      kubectl run -it temp-rpc -l app=temp-rpc --generator=run-pod/v1 --image=gcr.io/g-hash-community/polkadot-rpc-client:v0.1 \
      --image-pull-policy=Always \
      --env="ENDPOINT=ws://$$FULL_NODE_IP:9944"  \
      -- /usr/local/bin/node /workspace/getInfo.js

      # Wait for log to get peer id
      log=""
      while [ -z $log ]; do
        echo "Waiting for log..."
        log=$(kubectl logs temp-rpc)
        [ -z "$log" ] && sleep 10
      done

      export PEER_ID=$log

      sed -i'' -e  "s/YOUR_PEER_ID/$${PEER_ID}/g" k8s/deployment-validator.yaml
      sed -i'' -e  "s/YOUR_NODE_NAME/${_NODE_NAME}/g" k8s/pvc.yaml
      sed -i'' -e  "s/YOUR_NODE_NAME/${_NODE_NAME}/g" k8s/service.yaml

      kubectl apply -f k8s/deployment-validator.yaml
      kubectl apply -f k8s/pvc.yaml
      kubectl apply -f k8s/service.yaml

      # Delete temporary pod
      kubectl delete pod temp-rpc

      # Query loadBalancer ip for validator node
      export VALIDATOR_NODE_SVC_NAME=$_NODE_NAME-service
      external_ip=""
      while [ -z $external_ip ]; do
        echo "Waiting for LoadBalancer..."
        external_ip=$(kubectl get svc $$VALIDATOR_NODE_SVC_NAME --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}")
        [ -z "$external_ip" ] && sleep 10
      done
      echo 'LoadBalancer ready:' && echo $external_ip

      export VALIDATOR_NODE_IP=$(kubectl get svc $$VALIDATOR_NODE_SVC_NAME -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

      # Invoke node insertSessionKey
      kubectl run -it insert-temp-rpc -l app=insert-temp-rpc --generator=run-pod/v1 --image=gcr.io/g-hash-community/polkadot-rpc-client:v0.1 \
      --image-pull-policy=Always \
      --env="ENDPOINT=ws://$$VALIDATOR_NODE_IP:9944"  \
      --env="DRY_RUN=0" \
      -- /usr/local/bin/node /workspace/insertSessionKey.js

      # Wait for log to get insertSessionKey result
      insert_result=""
      while [ -z $insert_result ]; do
        echo "Waiting for log..."
        insert_result=$(kubectl logs insert-temp-rpc)
        [ -z "$insert_result" ] && sleep 10
      done

      export INSERT_OUTPUT=$insert_result
      echo $INSERT_OUTPUT

      # Remove temporary pod
      kubectl delete pod insert-temp-rpc
