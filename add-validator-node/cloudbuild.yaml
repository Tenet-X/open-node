timeout: 3600s # 1-hr
tags:
  - open-node-platform
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
  _GCP_REGION: ${GCP_REGION}
  _NODE_NAME: ${NODE_NAME}
  _CLUSTER_NAME: ${CLUSTER_NAME}
  _FULL_NODE_NAME: ${FULL_NODE_NAME}
  _SESSION_KEY: ${SESSION_KEY}
options:
  substitution_option: 'ALLOW_LOOSE'
steps:
- name: "gcr.io/${_PROJECT_ID}/open-node-platform-installer"
  id: "add-validator-node"
  entrypoint: 'bash'
  args:
    - '-xe'
    - '-c'
    - |
      gcloud container clusters get-credentials ${_CLUSTER_NAME} --region ${_GCP_REGION}

      # # Get full node ip
      export FULL_NODE_SVC_NAME=$_FULL_NODE_NAME-service
      export FULL_NODE_IP=$(kubectl get svc $$FULL_NODE_SVC_NAME -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      export FULL_NODE_PEER_ID=$(kubectl logs $(kubectl get pod -l type=full -o jsonpath='{.items[0].metadata.name}') -c polkdot-rpc)

      sed -i'' -e  "s/YOUR_FULL_NODE_IP/$${FULL_NODE_IP}/g" k8s/deployment-validator.yaml
      sed -i'' -e  "s/YOUR_PEER_ID/$${FULL_NODE_PEER_ID}/g" k8s/deployment-validator.yaml
      sed -i'' -e  "s/YOUR_NODE_NAME/${_NODE_NAME}/g" k8s/deployment-validator.yaml
      sed -i'' -e  "s/YOUR_NODE_NAME/${_NODE_NAME}/g" k8s/pvc.yaml

      kubectl apply -f k8s/deployment-validator.yaml
      kubectl apply -f k8s/pvc.yaml

      # //TODO: remove sleep

      sleep 20

      export PUBLIC_KEY=$(kubectl exec $(kubectl get pod -l app=$_NODE_NAME -o jsonpath='{.items[0].metadata.name}') -c  polkdot-rpc -- /bin/sh -c "ENDPOINT=ws://localhost:9944 DRY_RUN=0 SESSINO_KEY=$_SESSION_KEY /usr/local/bin/node /workspace/insertSessionKey.js")

      log=$(kubectl logs $(kubectl get pod -l app=$_NODE_NAME -o jsonpath='{.items[0].metadata.name}') -c polkdot-rpc)

      export VALIDATOR_PEER_ID=$(echo -e $log | sed 's/\r$//')

      export KEY_RAW_DATA="{\"validatorId\": \"$$VALIDATOR_PEER_ID\", \"seed\": \"$_SESSION_KEY\", \"publickey\": \"$$PUBLIC_KEY\"}"
      export KEY_DATA=$(echo -e $$KEY_RAW_DATA | base64)

      export SECRET_NAME=$_NODE_NAME-secret
      export SECRET_DATA=$_NODE_NAME=$$KEY_DATA

      kubectl create secret generic $$SECRET_NAME --from-literal="$$SECRET_DATA"
