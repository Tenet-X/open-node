// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { assert } from '@polkadot/util';
import { mnemonicValidate } from "../../mnemonic/index.mjs";
import { naclKeypairFromSeed } from "../../nacl/index.mjs";
import { ledgerDerivePrivate } from "./derivePrivate.mjs";
import { ledgerMaster } from "./master.mjs";
import { ledgerValidatePath } from "./validatePath.mjs";
const HARDENED = 0x80000000;
export function hdLedger(mnemonic, path) {
  assert(mnemonicValidate(mnemonic), 'Invalid mnemonic passed to ledger derivation');
  assert(ledgerValidatePath(path), 'Invalid derivation path');
  return naclKeypairFromSeed(path.split('/').slice(1).map(n => parseInt(n.replace("'", ''), 10)).map(n => n < HARDENED ? n + HARDENED : n).reduce((x, n) => ledgerDerivePrivate(x, n), ledgerMaster(mnemonic)).slice(0, 32));
}